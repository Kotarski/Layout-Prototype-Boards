"use strict";
var Circuit;
(function (Circuit) {
    var Component;
    (function (Component) {
        var _Diode;
        (function (_Diode) {
            _Diode.loadSchematic = (raw) => {
                const name = (raw.name);
                const breakdownVoltage = (raw.breakdownVoltage);
                const saturationCurrent = (raw.saturationCurrent);
                const color = (raw.color || raw.colour);
                const orientations = ["LR", "RL", "UD", "DU"];
                const orientation = ValueCheck.validate(orientations, "LR")(raw.orientation);
                const where = ValueCheck.where({ x: 0, y: 0 })(raw.where);
                const joints = (raw.joints || deriveJoints(orientation, where));
                return _Diode.makeSchematic({ name, breakdownVoltage, saturationCurrent, color, joints });
            };
            const deriveJoints = (orientation, where) => {
                const baseJoints = ({
                    LR: [{ x: -20, y: 0 }, { x: 20, y: 0 }],
                    UD: [{ x: 0, y: -20 }, { x: 0, y: 20 }],
                    RL: [{ x: 20, y: 0 }, { x: -20, y: 0 }],
                    DU: [{ x: 0, y: 20 }, { x: 0, y: -20 }]
                })[orientation];
                return vector(baseJoints).sumWith(where).vectors;
            };
        })(_Diode = Component._Diode || (Component._Diode = {}));
    })(Component = Circuit.Component || (Circuit.Component = {}));
})(Circuit || (Circuit = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLWxvYWRTY2hlbWF0aWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlc2NyaXB0L2NpcmN1aXQvY29tcG9uZW50L19EaW9kZS8tbG9hZFNjaGVtYXRpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBVSxPQUFPLENBd0JoQjtBQXhCRCxXQUFVLE9BQU87SUFBQyxJQUFBLFNBQVMsQ0F3QjFCO0lBeEJpQixXQUFBLFNBQVM7UUFBQyxJQUFBLE1BQU0sQ0F3QmpDO1FBeEIyQixXQUFBLE1BQU07WUFDbEIsb0JBQWEsR0FBb0QsQ0FBQyxHQUFRLEVBQUUsRUFBRTtnQkFDeEYsTUFBTSxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3hCLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztnQkFDaEQsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2dCQUNsRCxNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUV4QyxNQUFNLFlBQVksR0FBNkIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDeEUsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUM3RSxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzFELE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxZQUFZLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7Z0JBRWhFLE9BQU8sT0FBQSxhQUFhLENBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDdEYsQ0FBQyxDQUFBO1lBRUQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxXQUFzQyxFQUFFLEtBQWEsRUFBRSxFQUFFO2dCQUM1RSxNQUFNLFVBQVUsR0FBRyxDQUFDO29CQUNqQixFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztvQkFDdkMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUM7b0JBQ3ZDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO29CQUN2QyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztpQkFDekMsQ0FBQyxDQUFDLFdBQVcsQ0FBcUIsQ0FBQztnQkFDcEMsT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUNwRCxDQUFDLENBQUE7UUFDSixDQUFDLEVBeEIyQixNQUFNLEdBQU4sZ0JBQU0sS0FBTixnQkFBTSxRQXdCakM7SUFBRCxDQUFDLEVBeEJpQixTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQXdCMUI7QUFBRCxDQUFDLEVBeEJTLE9BQU8sS0FBUCxPQUFPLFFBd0JoQiIsInNvdXJjZXNDb250ZW50IjpbIm5hbWVzcGFjZSBDaXJjdWl0LkNvbXBvbmVudC5fRGlvZGUge1xyXG4gICBleHBvcnQgY29uc3QgbG9hZFNjaGVtYXRpYzogQ29tcG9uZW50LlR5cGVzLmxvYWRGdW5jdGlvbjxDbGFzc2VzLlNjaGVtYXRpYz4gPSAocmF3OiBhbnkpID0+IHtcclxuICAgICAgY29uc3QgbmFtZSA9IChyYXcubmFtZSk7XHJcbiAgICAgIGNvbnN0IGJyZWFrZG93blZvbHRhZ2UgPSAocmF3LmJyZWFrZG93blZvbHRhZ2UpO1xyXG4gICAgICBjb25zdCBzYXR1cmF0aW9uQ3VycmVudCA9IChyYXcuc2F0dXJhdGlvbkN1cnJlbnQpO1xyXG4gICAgICBjb25zdCBjb2xvciA9IChyYXcuY29sb3IgfHwgcmF3LmNvbG91cik7XHJcbiAgICAgIC8vSm9pbnRzIEJsb2NrXHJcbiAgICAgIGNvbnN0IG9yaWVudGF0aW9uczogW1wiTFJcIiwgXCJSTFwiLCBcIlVEXCIsIFwiRFVcIl0gPSBbXCJMUlwiLCBcIlJMXCIsIFwiVURcIiwgXCJEVVwiXTtcclxuICAgICAgY29uc3Qgb3JpZW50YXRpb24gPSBWYWx1ZUNoZWNrLnZhbGlkYXRlKG9yaWVudGF0aW9ucywgXCJMUlwiKShyYXcub3JpZW50YXRpb24pO1xyXG4gICAgICBjb25zdCB3aGVyZSA9IFZhbHVlQ2hlY2sud2hlcmUoeyB4OiAwLCB5OiAwIH0pKHJhdy53aGVyZSk7XHJcbiAgICAgIGNvbnN0IGpvaW50cyA9IChyYXcuam9pbnRzIHx8IGRlcml2ZUpvaW50cyhvcmllbnRhdGlvbiwgd2hlcmUpKTtcclxuXHJcbiAgICAgIHJldHVybiBtYWtlU2NoZW1hdGljKHsgbmFtZSwgYnJlYWtkb3duVm9sdGFnZSwgc2F0dXJhdGlvbkN1cnJlbnQsIGNvbG9yLCBqb2ludHMgfSk7XHJcbiAgIH1cclxuXHJcbiAgIGNvbnN0IGRlcml2ZUpvaW50cyA9IChvcmllbnRhdGlvbjogXCJMUlwiIHwgXCJSTFwiIHwgXCJVRFwiIHwgXCJEVVwiLCB3aGVyZTogVmVjdG9yKSA9PiB7XHJcbiAgICAgIGNvbnN0IGJhc2VKb2ludHMgPSAoe1xyXG4gICAgICAgICBMUjogW3sgeDogLTIwLCB5OiAwIH0sIHsgeDogMjAsIHk6IDAgfV0sXHJcbiAgICAgICAgIFVEOiBbeyB4OiAwLCB5OiAtMjAgfSwgeyB4OiAwLCB5OiAyMCB9XSxcclxuICAgICAgICAgUkw6IFt7IHg6IDIwLCB5OiAwIH0sIHsgeDogLTIwLCB5OiAwIH1dLFxyXG4gICAgICAgICBEVTogW3sgeDogMCwgeTogMjAgfSwgeyB4OiAwLCB5OiAtMjAgfV1cclxuICAgICAgfSlbb3JpZW50YXRpb25dIGFzIFtWZWN0b3IsIFZlY3Rvcl07XHJcbiAgICAgIHJldHVybiB2ZWN0b3IoYmFzZUpvaW50cykuc3VtV2l0aCh3aGVyZSkudmVjdG9ycztcclxuICAgfVxyXG59Il19