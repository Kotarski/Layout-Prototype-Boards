"use strict";
var Circuit;
(function (Circuit) {
    var Component;
    (function (Component) {
        var _OpAmp;
        (function (_OpAmp) {
            const defaulterLayout = {
                name: ValueCheck.validate("string", "opAmp"),
                disabled: ValueCheck.validate("boolean", false),
                isDual: ValueCheck.validate("boolean", false),
                joints: ValueCheck.joints([{ x: 30, y: 30 }, { x: 40, y: 30 }]),
                offsetVoltage: ValueCheck.validate("number", 0)
            };
            _OpAmp.makeLayout = getMaker(_OpAmp.Classes.Layout, defaulterLayout, (component) => {
                Component.Addins.Graphical.init(component);
                Component.Addins.Draggable.init(component);
                Component.Addins.Rotatable.init(component);
                Component.Addins.Selectable.init(component);
                Component.Addins.ConnectionHighlights.init(component);
            });
        })(_OpAmp = Component._OpAmp || (Component._OpAmp = {}));
    })(Component = Circuit.Component || (Circuit.Component = {}));
})(Circuit || (Circuit = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLW1ha2VMYXlvdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlc2NyaXB0L2NpcmN1aXQvY29tcG9uZW50L19PcEFtcC8tbWFrZUxheW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsSUFBVSxPQUFPLENBb0JoQjtBQXBCRCxXQUFVLE9BQU87SUFBQyxJQUFBLFNBQVMsQ0FvQjFCO0lBcEJpQixXQUFBLFNBQVM7UUFBQyxJQUFBLE1BQU0sQ0FvQmpDO1FBcEIyQixXQUFBLE1BQU07WUFDL0IsTUFBTSxlQUFlLEdBQTZDO2dCQUMvRCxJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDO2dCQUM1QyxRQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO2dCQUMvQyxNQUFNLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO2dCQUM3QyxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FDdEIsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FDdEM7Z0JBQ0QsYUFBYSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQzthQUNqRCxDQUFDO1lBRVcsaUJBQVUsR0FBRyxRQUFRLENBQUMsT0FBQSxPQUFPLENBQUMsTUFBTSxFQUFFLGVBQWUsRUFDL0QsQ0FBQyxTQUF5QixFQUFFLEVBQUU7Z0JBQzNCLFVBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2pDLFVBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2pDLFVBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2pDLFVBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ2xDLFVBQUEsTUFBTSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMvQyxDQUFDLENBQ0gsQ0FBQztRQUNMLENBQUMsRUFwQjJCLE1BQU0sR0FBTixnQkFBTSxLQUFOLGdCQUFNLFFBb0JqQztJQUFELENBQUMsRUFwQmlCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBb0IxQjtBQUFELENBQUMsRUFwQlMsT0FBTyxLQUFQLE9BQU8sUUFvQmhCIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIn5jbGFzc2VzLnRzXCIgLz5cclxuXHJcbm5hbWVzcGFjZSBDaXJjdWl0LkNvbXBvbmVudC5fT3BBbXAge1xyXG4gICBjb25zdCBkZWZhdWx0ZXJMYXlvdXQ6IFZhbHVlQ2hlY2suRGVmYXVsdGVyPFR5cGVzLnZhbHVlc0xheW91dD4gPSB7XHJcbiAgICAgIG5hbWU6IFZhbHVlQ2hlY2sudmFsaWRhdGUoXCJzdHJpbmdcIiwgXCJvcEFtcFwiKSxcclxuICAgICAgZGlzYWJsZWQ6IFZhbHVlQ2hlY2sudmFsaWRhdGUoXCJib29sZWFuXCIsIGZhbHNlKSxcclxuICAgICAgaXNEdWFsOiBWYWx1ZUNoZWNrLnZhbGlkYXRlKFwiYm9vbGVhblwiLCBmYWxzZSksXHJcbiAgICAgIGpvaW50czogVmFsdWVDaGVjay5qb2ludHM8W1ZlY3RvciwgVmVjdG9yXT4oXHJcbiAgICAgICAgIFt7IHg6IDMwLCB5OiAzMCB9LCB7IHg6IDQwLCB5OiAzMCB9XVxyXG4gICAgICApLFxyXG4gICAgICBvZmZzZXRWb2x0YWdlOiBWYWx1ZUNoZWNrLnZhbGlkYXRlKFwibnVtYmVyXCIsIDApXHJcbiAgIH07XHJcblxyXG4gICBleHBvcnQgY29uc3QgbWFrZUxheW91dCA9IGdldE1ha2VyKENsYXNzZXMuTGF5b3V0LCBkZWZhdWx0ZXJMYXlvdXQsXHJcbiAgICAgIChjb21wb25lbnQ6IENsYXNzZXMuTGF5b3V0KSA9PiB7XHJcbiAgICAgICAgIEFkZGlucy5HcmFwaGljYWwuaW5pdChjb21wb25lbnQpO1xyXG4gICAgICAgICBBZGRpbnMuRHJhZ2dhYmxlLmluaXQoY29tcG9uZW50KTtcclxuICAgICAgICAgQWRkaW5zLlJvdGF0YWJsZS5pbml0KGNvbXBvbmVudCk7XHJcbiAgICAgICAgIEFkZGlucy5TZWxlY3RhYmxlLmluaXQoY29tcG9uZW50KTtcclxuICAgICAgICAgQWRkaW5zLkNvbm5lY3Rpb25IaWdobGlnaHRzLmluaXQoY29tcG9uZW50KTtcclxuICAgICAgfVxyXG4gICApO1xyXG59Il19