"use strict";
var Circuit;
(function (Circuit) {
    var Component;
    (function (Component) {
        var Addins;
        (function (Addins) {
            var WireCreation;
            (function (WireCreation) {
                WireCreation.init = (component) => {
                    $(component.group.element).on("mouseenter", ".hole", (mOE) => {
                        if (!$(mOE.target).draggable('instance')) {
                            Svg.Addins.Draggable.init(component.group.element, {
                                eventTarget: mOE.target,
                                disableMovement: true,
                                styleClass: ""
                            });
                            let dragHandle;
                            $(mOE.target).on(Events.dragStart, (e, ui, drag) => {
                                e.stopPropagation();
                                const position = Active.layout.group.convertVector({ x: e.clientX, y: e.clientY }, "DomToSvg", "relToGroup");
                                const gridPosition = vector(position).snapToGrid().vector;
                                const wire = createWireAtPoint(gridPosition);
                                $(wire.group.element).trigger(Events.draw);
                                dragHandle = $(wire.group.element).find(".dragHandle")[0];
                                $(dragHandle).trigger("mousedown");
                            });
                            $(mOE.target).on(Events.drag, (e, ui, drag) => {
                                e.stopPropagation();
                                $(dragHandle).trigger(Events.drag, [ui, drag]);
                            });
                            $(mOE.target).on(Events.dragStop, (e, ui) => {
                                e.stopPropagation();
                                $(dragHandle).trigger(Events.dragStop, ui);
                            });
                        }
                    });
                };
                const createWireAtPoint = (vector) => {
                    const wire = Component.wire.layout.make({
                        joints: [{ x: vector.x, y: vector.y }, { x: vector.x, y: vector.y }],
                    });
                    manifest.addComponent(manifest.layout, wire);
                    return wire;
                };
            })(WireCreation = Addins.WireCreation || (Addins.WireCreation = {}));
        })(Addins = Component.Addins || (Component.Addins = {}));
    })(Component = Circuit.Component || (Circuit.Component = {}));
})(Circuit || (Circuit = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lyZUNyZWF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdHlwZXNjcmlwdC9jaXJjdWl0L2NvbXBvbmVudC9hZGRpbnMvd2lyZUNyZWF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFVLE9BQU8sQ0FzRGhCO0FBdERELFdBQVUsT0FBTztJQUFDLElBQUEsU0FBUyxDQXNEMUI7SUF0RGlCLFdBQUEsU0FBUztRQUFDLElBQUEsTUFBTSxDQXNEakM7UUF0RDJCLFdBQUEsTUFBTTtZQUFDLElBQUEsWUFBWSxDQXNEOUM7WUF0RGtDLFdBQUEsWUFBWTtnQkFJL0IsaUJBQUksR0FBRyxDQUFDLFNBQXlCLEVBQUUsRUFBRTtvQkFHL0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTt3QkFFMUQsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFOzRCQUN2QyxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUU7Z0NBQ2hELFdBQVcsRUFBRSxHQUFHLENBQUMsTUFBNEI7Z0NBQzdDLGVBQWUsRUFBRSxJQUFJO2dDQUNyQixVQUFVLEVBQUUsRUFBRTs2QkFDaEIsQ0FBQyxDQUFDOzRCQUNILElBQUksVUFBOEIsQ0FBQzs0QkFNbkMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsSUFBWSxFQUFFLEVBQUU7Z0NBQ3hELENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztnQ0FDcEIsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0NBQzdHLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxNQUFNLENBQUM7Z0NBQzFELE1BQU0sSUFBSSxHQUFHLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO2dDQUM3QyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2dDQUMzQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBUSxDQUFDO2dDQUNqRSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzRCQUN0QyxDQUFDLENBQUMsQ0FBQTs0QkFHRixDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFZLEVBQUUsRUFBRTtnQ0FDbkQsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO2dDQUNwQixDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQzs0QkFDbEQsQ0FBQyxDQUFDLENBQUM7NEJBR0gsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRTtnQ0FDekMsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO2dDQUNwQixDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7NEJBQzlDLENBQUMsQ0FBQyxDQUFDO3lCQUNMO29CQUNKLENBQUMsQ0FBQyxDQUFBO2dCQUVMLENBQUMsQ0FBQTtnQkFFRCxNQUFNLGlCQUFpQixHQUFHLENBQUMsTUFBYyxFQUFFLEVBQUU7b0JBQzFDLE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQzt3QkFDckMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQztxQkFDdEUsQ0FBQyxDQUFDO29CQUNILFFBQVEsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztvQkFDN0MsT0FBTyxJQUFJLENBQUM7Z0JBQ2YsQ0FBQyxDQUFBO1lBQ0osQ0FBQyxFQXREa0MsWUFBWSxHQUFaLG1CQUFZLEtBQVosbUJBQVksUUFzRDlDO1FBQUQsQ0FBQyxFQXREMkIsTUFBTSxHQUFOLGdCQUFNLEtBQU4sZ0JBQU0sUUFzRGpDO0lBQUQsQ0FBQyxFQXREaUIsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUFzRDFCO0FBQUQsQ0FBQyxFQXREUyxPQUFPLEtBQVAsT0FBTyxRQXNEaEIiLCJzb3VyY2VzQ29udGVudCI6WyJuYW1lc3BhY2UgQ2lyY3VpdC5Db21wb25lbnQuQWRkaW5zLldpcmVDcmVhdGlvbiB7XHJcbiAgIHR5cGUgaG9sZXlDb21wb25lbnQgPSBDb21wb25lbnQuSW5zdGFuY2UgJiB7IGNvbm5lY3RvclNldHM6IENvbXBvbmVudC5UeXBlcy5ob2xlW11bXSB9O1xyXG5cclxuXHJcbiAgIGV4cG9ydCBjb25zdCBpbml0ID0gKGNvbXBvbmVudDogaG9sZXlDb21wb25lbnQpID0+IHtcclxuICAgICAgLy8gSG9sZSBlbGVtZW50cyB3aWxsIG5vdCBleGlzdCBhdCBpbml0aWFsaXNhdGlvbixcclxuICAgICAgLy8gbmVlZCB0byB1c2UgY29tcG9uZW50IGZpbHRlcmVkIGJ5IC5ob2xlIHNlbGVjdG9yXHJcbiAgICAgICQoY29tcG9uZW50Lmdyb3VwLmVsZW1lbnQpLm9uKFwibW91c2VlbnRlclwiLCBcIi5ob2xlXCIsIChtT0UpID0+IHtcclxuICAgICAgICAgLy8gU2V0IHRoZSBob2xlIGFzIGRyYWdnYWJsZSBpZiBpdCBpc24ndCBhbHJlYWR5XHJcbiAgICAgICAgIGlmICghJChtT0UudGFyZ2V0KS5kcmFnZ2FibGUoJ2luc3RhbmNlJykpIHtcclxuICAgICAgICAgICAgU3ZnLkFkZGlucy5EcmFnZ2FibGUuaW5pdChjb21wb25lbnQuZ3JvdXAuZWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICBldmVudFRhcmdldDogbU9FLnRhcmdldCBhcyBTVkdHcmFwaGljc0VsZW1lbnQsXHJcbiAgICAgICAgICAgICAgIGRpc2FibGVNb3ZlbWVudDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgc3R5bGVDbGFzczogXCJcIlxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbGV0IGRyYWdIYW5kbGU6IFNWR0dyYXBoaWNzRWxlbWVudDtcclxuXHJcbiAgICAgICAgICAgIC8vIFdlIGFyZSBoaWphY2tpbmcgdGhlIGhvbGUgZHJhZyBldmVudHMsIHNvIGl0J3MgaW1wb3J0YW50IHRoZSByZWFsIGhhbmRsZXJzIGRvbid0IGZpcmVcclxuICAgICAgICAgICAgLy8gaGVuY2U6IGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBDcmVhdGUgdGhlIHdpcmUsIHNlbGVjdCBpdCwgYW5kIGdyYWIgYSBoYW5kbGUgKGFueSBpcyBmaW5lKVxyXG4gICAgICAgICAgICAkKG1PRS50YXJnZXQpLm9uKEV2ZW50cy5kcmFnU3RhcnQsIChlLCB1aSwgZHJhZzogVmVjdG9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gQWN0aXZlLmxheW91dC5ncm91cC5jb252ZXJ0VmVjdG9yKHsgeDogZS5jbGllbnRYLCB5OiBlLmNsaWVudFkgfSwgXCJEb21Ub1N2Z1wiLCBcInJlbFRvR3JvdXBcIik7XHJcbiAgICAgICAgICAgICAgIGNvbnN0IGdyaWRQb3NpdGlvbiA9IHZlY3Rvcihwb3NpdGlvbikuc25hcFRvR3JpZCgpLnZlY3RvcjtcclxuICAgICAgICAgICAgICAgY29uc3Qgd2lyZSA9IGNyZWF0ZVdpcmVBdFBvaW50KGdyaWRQb3NpdGlvbik7XHJcbiAgICAgICAgICAgICAgICQod2lyZS5ncm91cC5lbGVtZW50KS50cmlnZ2VyKEV2ZW50cy5kcmF3KTtcclxuICAgICAgICAgICAgICAgZHJhZ0hhbmRsZSA9ICQod2lyZS5ncm91cC5lbGVtZW50KS5maW5kKFwiLmRyYWdIYW5kbGVcIilbMF0gYXMgYW55O1xyXG4gICAgICAgICAgICAgICAkKGRyYWdIYW5kbGUpLnRyaWdnZXIoXCJtb3VzZWRvd25cIik7XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAvLyBQYXNzIHRoZSBoYW5kbGVycyB0byB0aGUgd2lyZVxyXG4gICAgICAgICAgICAkKG1PRS50YXJnZXQpLm9uKEV2ZW50cy5kcmFnLCAoZSwgdWksIGRyYWc6IFZlY3RvcikgPT4ge1xyXG4gICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAkKGRyYWdIYW5kbGUpLnRyaWdnZXIoRXZlbnRzLmRyYWcsIFt1aSwgZHJhZ10pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIFBhc3MgdGhlIGhhbmRsZXJzIHRvIHRoZSB3aXJlXHJcbiAgICAgICAgICAgICQobU9FLnRhcmdldCkub24oRXZlbnRzLmRyYWdTdG9wLCAoZSwgdWkpID0+IHtcclxuICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgICAgJChkcmFnSGFuZGxlKS50cmlnZ2VyKEV2ZW50cy5kcmFnU3RvcCwgdWkpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgfVxyXG4gICAgICB9KVxyXG5cclxuICAgfVxyXG5cclxuICAgY29uc3QgY3JlYXRlV2lyZUF0UG9pbnQgPSAodmVjdG9yOiBWZWN0b3IpID0+IHtcclxuICAgICAgY29uc3Qgd2lyZSA9IENvbXBvbmVudC53aXJlLmxheW91dC5tYWtlKHtcclxuICAgICAgICAgam9pbnRzOiBbeyB4OiB2ZWN0b3IueCwgeTogdmVjdG9yLnkgfSwgeyB4OiB2ZWN0b3IueCwgeTogdmVjdG9yLnkgfV0sXHJcbiAgICAgIH0pO1xyXG4gICAgICBtYW5pZmVzdC5hZGRDb21wb25lbnQobWFuaWZlc3QubGF5b3V0LCB3aXJlKTtcclxuICAgICAgcmV0dXJuIHdpcmU7XHJcbiAgIH1cclxufSJdfQ==