"use strict";
var Circuit;
(function (Circuit) {
    var Component;
    (function (Component) {
        var _Wire;
        (function (_Wire) {
            const defaulterLayout = {
                name: ValueCheck.validate("string", "wire"),
                disabled: ValueCheck.validate("boolean", false),
                joints: ValueCheck.joints([{ x: 0, y: 0 }, { x: 80, y: 0 }], l => l >= 2),
                color: ValueCheck.color("#545454")
            };
            _Wire.makeLayout = getMaker(_Wire.Classes.Layout, defaulterLayout, (component) => {
                Component.Addins.Graphical.init(component);
                Component.Addins.Draggable.init(component);
                Component.Addins.Selectable.init(component);
                Component.Addins.Extendable.init(component, true, true, true);
                Component.Addins.ConnectionHighlights.init(component);
                Component.Addins.Recolorable.init(component, () => getRecolorPosition(component));
            });
            function getRecolorPosition(component) {
                const angle = vector(component.joints[0]).getAngleTo(component.joints[1]);
                const offset = Utility.Polar.toVector(12, angle + 45);
                return vector(component.joints[0]).sumWith(offset).vector;
            }
        })(_Wire = Component._Wire || (Component._Wire = {}));
    })(Component = Circuit.Component || (Circuit.Component = {}));
})(Circuit || (Circuit = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLW1ha2VMYXlvdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90eXBlc2NyaXB0L2NpcmN1aXQvY29tcG9uZW50L19XaXJlLy1tYWtlTGF5b3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFFQSxJQUFVLE9BQU8sQ0F5QmhCO0FBekJELFdBQVUsT0FBTztJQUFDLElBQUEsU0FBUyxDQXlCMUI7SUF6QmlCLFdBQUEsU0FBUztRQUFDLElBQUEsS0FBSyxDQXlCaEM7UUF6QjJCLFdBQUEsS0FBSztZQUM5QixNQUFNLGVBQWUsR0FBNkM7Z0JBQy9ELElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUM7Z0JBQzNDLFFBQVEsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUM7Z0JBQy9DLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxDQUN0QixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FDaEQ7Z0JBQ0QsS0FBSyxFQUFFLFVBQVUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO2FBQ3BDLENBQUM7WUFFVyxnQkFBVSxHQUFHLFFBQVEsQ0FBQyxNQUFBLE9BQU8sQ0FBQyxNQUFNLEVBQUUsZUFBZSxFQUMvRCxDQUFDLFNBQXlCLEVBQUUsRUFBRTtnQkFDM0IsVUFBQSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFBQyxVQUFBLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUNuRSxVQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUNsQyxVQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUNwRCxVQUFBLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzVDLFVBQUEsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDM0UsQ0FBQyxDQUNILENBQUM7WUFFRixTQUFTLGtCQUFrQixDQUFDLFNBQXlCO2dCQUNsRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFFLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUM7Z0JBQ3RELE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQzdELENBQUM7UUFDSixDQUFDLEVBekIyQixLQUFLLEdBQUwsZUFBSyxLQUFMLGVBQUssUUF5QmhDO0lBQUQsQ0FBQyxFQXpCaUIsU0FBUyxHQUFULGlCQUFTLEtBQVQsaUJBQVMsUUF5QjFCO0FBQUQsQ0FBQyxFQXpCUyxPQUFPLEtBQVAsT0FBTyxRQXlCaEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwifmNsYXNzZXMudHNcIiAvPlxyXG5cclxubmFtZXNwYWNlIENpcmN1aXQuQ29tcG9uZW50Ll9XaXJlIHtcclxuICAgY29uc3QgZGVmYXVsdGVyTGF5b3V0OiBWYWx1ZUNoZWNrLkRlZmF1bHRlcjxUeXBlcy52YWx1ZXNMYXlvdXQ+ID0ge1xyXG4gICAgICBuYW1lOiBWYWx1ZUNoZWNrLnZhbGlkYXRlKFwic3RyaW5nXCIsIFwid2lyZVwiKSxcclxuICAgICAgZGlzYWJsZWQ6IFZhbHVlQ2hlY2sudmFsaWRhdGUoXCJib29sZWFuXCIsIGZhbHNlKSxcclxuICAgICAgam9pbnRzOiBWYWx1ZUNoZWNrLmpvaW50cyhcclxuICAgICAgICAgW3sgeDogMCwgeTogMCB9LCB7IHg6IDgwLCB5OiAwIH1dLCBsID0+IGwgPj0gMlxyXG4gICAgICApLFxyXG4gICAgICBjb2xvcjogVmFsdWVDaGVjay5jb2xvcihcIiM1NDU0NTRcIilcclxuICAgfTtcclxuXHJcbiAgIGV4cG9ydCBjb25zdCBtYWtlTGF5b3V0ID0gZ2V0TWFrZXIoQ2xhc3Nlcy5MYXlvdXQsIGRlZmF1bHRlckxheW91dCxcclxuICAgICAgKGNvbXBvbmVudDogQ2xhc3Nlcy5MYXlvdXQpID0+IHtcclxuICAgICAgICAgQWRkaW5zLkdyYXBoaWNhbC5pbml0KGNvbXBvbmVudCk7IEFkZGlucy5EcmFnZ2FibGUuaW5pdChjb21wb25lbnQpO1xyXG4gICAgICAgICBBZGRpbnMuU2VsZWN0YWJsZS5pbml0KGNvbXBvbmVudCk7XHJcbiAgICAgICAgIEFkZGlucy5FeHRlbmRhYmxlLmluaXQoY29tcG9uZW50LCB0cnVlLCB0cnVlLCB0cnVlKTtcclxuICAgICAgICAgQWRkaW5zLkNvbm5lY3Rpb25IaWdobGlnaHRzLmluaXQoY29tcG9uZW50KTtcclxuICAgICAgICAgQWRkaW5zLlJlY29sb3JhYmxlLmluaXQoY29tcG9uZW50LCAoKSA9PiBnZXRSZWNvbG9yUG9zaXRpb24oY29tcG9uZW50KSk7XHJcbiAgICAgIH1cclxuICAgKTtcclxuXHJcbiAgIGZ1bmN0aW9uIGdldFJlY29sb3JQb3NpdGlvbihjb21wb25lbnQ6IENsYXNzZXMuTGF5b3V0KTogVmVjdG9yIHtcclxuICAgICAgY29uc3QgYW5nbGUgPSB2ZWN0b3IoY29tcG9uZW50LmpvaW50c1swXSkuZ2V0QW5nbGVUbyhjb21wb25lbnQuam9pbnRzWzFdKTtcclxuICAgICAgY29uc3Qgb2Zmc2V0ID0gVXRpbGl0eS5Qb2xhci50b1ZlY3RvcigxMiwgYW5nbGUgKyA0NSk7XHJcbiAgICAgIHJldHVybiB2ZWN0b3IoY29tcG9uZW50LmpvaW50c1swXSkuc3VtV2l0aChvZmZzZXQpLnZlY3RvcjtcclxuICAgfVxyXG59Il19