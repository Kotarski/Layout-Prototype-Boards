export default function filterInvalidComponents(circuitObjects) {
    let deferred = $.Deferred();
    let validComponents = [];
    let knownInvalidComponents = [];
    let unknownInvalidComponents = [];
    for (let circuitObject of circuitObjects) {
        if (!("func" in circuitObject)) {
            console.error("Object %o format is incorrect", [circuitObject]);
            deferred.reject("Object format is incorrect");
        }
        if (Circuit.mappings.getComponentMap(circuitObject.func)) {
            validComponents.push(circuitObject);
        }
        else if (discardableObjects.some(dO => dO === circuitObject.func)) {
            knownInvalidComponents.push(circuitObject);
        }
        else {
            unknownInvalidComponents.push(circuitObject);
        }
    }
    if (knownInvalidComponents.length) {
        console.debug("Sim objects %o have been safely removed", [knownInvalidComponents]);
    }
    if (unknownInvalidComponents.length) {
        console.warn("Components %o are either not supported or not valid", [unknownInvalidComponents]);
    }
    console.info("Components %o successfully retrieved", [validComponents]);
    deferred.resolve(validComponents);
    return deferred.promise();
}
const discardableObjects = [
    "setSimMode",
    "setGraphicsControls",
    "setDrawingControls",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLWZpbHRlckludmFsaWRDb21wb25lbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdHlwZXNjcmlwdC9maWxlSU8vbG9hZC9kYXNpbS8tZmlsdGVySW52YWxpZENvbXBvbmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE9BQU8sVUFBVSx1QkFBdUIsQ0FBQyxjQUFxQjtJQUVsRSxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFHNUIsSUFBSSxlQUFlLEdBQWEsRUFBRSxDQUFDO0lBR25DLElBQUksc0JBQXNCLEdBQWEsRUFBRSxDQUFDO0lBRzFDLElBQUksd0JBQXdCLEdBQWEsRUFBRSxDQUFDO0lBRzVDLEtBQUssSUFBSSxhQUFhLElBQUksY0FBYyxFQUFFO1FBR3ZDLElBQUksQ0FBQyxDQUFDLE1BQU0sSUFBSSxhQUFhLENBQUMsRUFBRTtZQUVkLE9BQU8sQ0FBQyxLQUFLLENBQUMsK0JBQStCLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQy9FLFFBQVEsQ0FBQyxNQUFNLENBQUMsNEJBQTRCLENBQUMsQ0FBQztTQUNoRDtRQUdELElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBRXZELGVBQWUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDdEM7YUFFSSxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFFaEUsc0JBQXNCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1NBQzVDO2FBQU07WUFHSix3QkFBd0IsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDL0M7S0FDSDtJQUVELElBQUksc0JBQXNCLENBQUMsTUFBTSxFQUFFO1FBQ2pCLE9BQU8sQ0FBQyxLQUFLLENBQUMseUNBQXlDLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUE7S0FDbkc7SUFFRCxJQUFJLHdCQUF3QixDQUFDLE1BQU0sRUFBRTtRQUNuQixPQUFPLENBQUMsSUFBSSxDQUFDLHFEQUFxRCxFQUFFLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO0tBQ2pIO0lBRWMsT0FBTyxDQUFDLElBQUksQ0FBQyxzQ0FBc0MsRUFBRSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7SUFDdkYsUUFBUSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUdsQyxPQUFPLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUM3QixDQUFDO0FBR0QsTUFBTSxrQkFBa0IsR0FBRztJQUN4QixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLG9CQUFvQjtDQUN0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmlsdGVySW52YWxpZENvbXBvbmVudHMoY2lyY3VpdE9iamVjdHM6IGFueVtdKTogSlF1ZXJ5UHJvbWlzZTx7fT4ge1xyXG4gICAvLyBBbGxvdyBjYWxsZXIgdG8gc2VlIHdoZW4gZnVuY3Rpb24gY29tcGxldGVzXHJcbiAgIGxldCBkZWZlcnJlZCA9ICQuRGVmZXJyZWQoKTtcclxuXHJcbiAgIC8vIExpc3Qgb2YgY29tcG9uZW50cyBmcm9tIGNpcmN1aXQgb2JqZWN0cyB0aGF0IGNhbiBiZSBkcmF3blxyXG4gICBsZXQgdmFsaWRDb21wb25lbnRzOiBvYmplY3RbXSA9IFtdO1xyXG5cclxuICAgLy8gTGlzdCBvZiBvYmplY3RzIHRoYXQgY2FuIGJlIHJlbW92ZWRcclxuICAgbGV0IGtub3duSW52YWxpZENvbXBvbmVudHM6IG9iamVjdFtdID0gW107XHJcblxyXG4gICAvLyBMaXN0IG9mIGNvbXBvbmVudHMgZnJvbSBjaXJjdWl0IG9iamVjdHMgdGhhdCBjYW4ndCBiZSBkcmF3blxyXG4gICBsZXQgdW5rbm93bkludmFsaWRDb21wb25lbnRzOiBvYmplY3RbXSA9IFtdO1xyXG5cclxuICAgLy8gSXRlcmF0ZSB0aHJvdWdoIGVhY2ggY2lyY3VpdCBvYmplY3RcclxuICAgZm9yIChsZXQgY2lyY3VpdE9iamVjdCBvZiBjaXJjdWl0T2JqZWN0cykge1xyXG5cclxuICAgICAgLy8gSWYgb2JqZWN0IGRvZXMgbm90IGhhdmUgcHJvcGVydHkgJ2Z1bmMnIChhcyBhbGwgc2hvdWxkKVxyXG4gICAgICBpZiAoIShcImZ1bmNcIiBpbiBjaXJjdWl0T2JqZWN0KSkge1xyXG4gICAgICAgICAgICAvLyBSZWplY3QgYXMgdGhlcmUgaXMgYSBmaWxlIGZvcm1hdCBpc3N1ZVxyXG4gICAgICAgICAgICAvKkxPR1NUQVJUKi9jb25zb2xlLmVycm9yKFwiT2JqZWN0ICVvIGZvcm1hdCBpcyBpbmNvcnJlY3RcIiwgW2NpcmN1aXRPYmplY3RdKTsvKkxPR0VORCovXHJcbiAgICAgICAgIGRlZmVycmVkLnJlamVjdChcIk9iamVjdCBmb3JtYXQgaXMgaW5jb3JyZWN0XCIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBJZiBvYmplY3QgaXMgaW4gdGhlIHN1cHBvcnRlZENvbXBvbmVudExpc3RcclxuICAgICAgaWYgKENpcmN1aXQubWFwcGluZ3MuZ2V0Q29tcG9uZW50TWFwKGNpcmN1aXRPYmplY3QuZnVuYykpIHtcclxuICAgICAgICAgLy8gQWRkIHRvIGRyYXdhYmxlQ29tcG9uZW50c1xyXG4gICAgICAgICB2YWxpZENvbXBvbmVudHMucHVzaChjaXJjdWl0T2JqZWN0KTtcclxuICAgICAgfVxyXG4gICAgICAvLyBJZiBvYmplY3QgaXMgbm90IHN1cHBvcnRlZCBidXQgY2FuIGJlIHNhZmVseSBkaXNjYXJkZWRcclxuICAgICAgZWxzZSBpZiAoZGlzY2FyZGFibGVPYmplY3RzLnNvbWUoZE8gPT4gZE8gPT09IGNpcmN1aXRPYmplY3QuZnVuYykpIHtcclxuICAgICAgICAgLy8gV2Uga25vdyBpdHMgb2sgdG8gcmVtb3ZlIGFuZCB0aGUgdXNlciBkaWQgbm90IGV4cGVjdCBpdCB0byBiZSBkcmF3blxyXG4gICAgICAgICBrbm93bkludmFsaWRDb21wb25lbnRzLnB1c2goY2lyY3VpdE9iamVjdClcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgLy8gSWYgb2JqZWN0IGlzIG5vdCBpbiBlaXRoZXIgbGlzdCB0aGVuIHVzZXIgd2lsbCBleHBlY3QgaXQgdG8gYmUgZHJhd25cclxuICAgICAgICAgLy8gYW5kIG5lZWRzIHRvIGJlIG5vdGlmaWVkIHRoYXQgaXQgaXMgbm90IHN1cHBvcnRlZFxyXG4gICAgICAgICB1bmtub3duSW52YWxpZENvbXBvbmVudHMucHVzaChjaXJjdWl0T2JqZWN0KTtcclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICBpZiAoa25vd25JbnZhbGlkQ29tcG9uZW50cy5sZW5ndGgpIHtcclxuICAgICAgICAgLypMT0dTVEFSVCovY29uc29sZS5kZWJ1ZyhcIlNpbSBvYmplY3RzICVvIGhhdmUgYmVlbiBzYWZlbHkgcmVtb3ZlZFwiLCBba25vd25JbnZhbGlkQ29tcG9uZW50c10pLypMT0dFTkQqL1xyXG4gICB9XHJcblxyXG4gICBpZiAodW5rbm93bkludmFsaWRDb21wb25lbnRzLmxlbmd0aCkge1xyXG4gICAgICAgICAvKkxPR1NUQVJUKi9jb25zb2xlLndhcm4oXCJDb21wb25lbnRzICVvIGFyZSBlaXRoZXIgbm90IHN1cHBvcnRlZCBvciBub3QgdmFsaWRcIiwgW3Vua25vd25JbnZhbGlkQ29tcG9uZW50c10pOy8qTE9HRU5EKi9cclxuICAgfVxyXG5cclxuICAgICAgLypMT0dTVEFSVCovY29uc29sZS5pbmZvKFwiQ29tcG9uZW50cyAlbyBzdWNjZXNzZnVsbHkgcmV0cmlldmVkXCIsIFt2YWxpZENvbXBvbmVudHNdKTsvKkxPR0VORCovXHJcbiAgIGRlZmVycmVkLnJlc29sdmUodmFsaWRDb21wb25lbnRzKTtcclxuXHJcbiAgIC8vIEFsbG93IGNhbGxlciB0byBzZWUgd2hlbiBmdW5jdGlvbiBjb21wbGV0ZXNcclxuICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcclxufVxyXG5cclxuLy8gTGlzdCBvZiBleHBlY3RlZCBidXQgc2FmZWx5IGlnbm9yYWJsZSBvYmplY3RzXHJcbmNvbnN0IGRpc2NhcmRhYmxlT2JqZWN0cyA9IFtcclxuICAgXCJzZXRTaW1Nb2RlXCIsXHJcbiAgIFwic2V0R3JhcGhpY3NDb250cm9sc1wiLFxyXG4gICBcInNldERyYXdpbmdDb250cm9sc1wiLFxyXG5dO1xyXG4iXX0=