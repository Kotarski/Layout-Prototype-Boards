"use strict";
var Svg;
(function (Svg) {
    var Element;
    (function (Element) {
        var Text;
        (function (Text) {
            let textPathCount = 0;
            function make(text, startVector, classes = "") {
                const element = Element.make("text", classes);
                element.setAttribute('x', startVector.x.toString());
                element.setAttribute('y', startVector.y.toString());
                element.appendChild(document.createTextNode(text));
                return svg(element);
            }
            Text.make = make;
            let Functions;
            (function (Functions) {
                function followPath(element) {
                    return (pathString) => {
                        let path = Element.Path.make(pathString);
                        $(path.element).hide();
                        let pathID = "pathForText" + textPathCount;
                        path.element.setAttribute("id", pathID);
                        textPathCount += 1;
                        let textPathEl = Element.make("textPath");
                        textPathEl.setAttribute("href", "#" + pathID);
                        let text = $(element).text();
                        $(element).text("");
                        textPathEl.appendChild(document.createTextNode(text));
                        element.appendChild(path.element);
                        element.appendChild(textPathEl);
                        return svg(element);
                    };
                }
                Functions.followPath = followPath;
                function rotatePosition(element) {
                    return (rotation) => {
                        const position = {
                            x: Number(element.getAttribute("x")),
                            y: Number(element.getAttribute("y"))
                        };
                        svg(element).rotate(rotation).rotate(-rotation, position);
                        if (25 < rotation && rotation < 155) {
                            $(element).css("text-anchor", "start");
                        }
                        else if (-155 < rotation && rotation < -25) {
                            $(element).css("text-anchor", "end");
                        }
                        else {
                            $(element).css("text-anchor", "middle");
                        }
                        if (135 < rotation || rotation < -135) {
                            $(element).css("alignment-baseline", "hanging");
                        }
                        else if (-55 < rotation && rotation < 45) {
                            $(element).css("alignment-baseline", "baseline");
                        }
                        else {
                            $(element).css("alignment-baseline", "middle");
                        }
                        return svg(element);
                    };
                }
                Functions.rotatePosition = rotatePosition;
            })(Functions = Text.Functions || (Text.Functions = {}));
        })(Text = Element.Text || (Element.Text = {}));
    })(Element = Svg.Element || (Svg.Element = {}));
})(Svg || (Svg = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiK3RleHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90eXBlc2NyaXB0L3N2Zy9lbGVtZW50Lyt0ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFVLEdBQUcsQ0FvRVo7QUFwRUQsV0FBVSxHQUFHO0lBQUMsSUFBQSxPQUFPLENBb0VwQjtJQXBFYSxXQUFBLE9BQU87UUFBQyxJQUFBLElBQUksQ0FvRXpCO1FBcEVxQixXQUFBLElBQUk7WUFDdkIsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDO1lBRXRCLFNBQWdCLElBQUksQ0FBQyxJQUFZLEVBQUUsV0FBbUIsRUFBRSxVQUFrQixFQUFFO2dCQUN6RSxNQUFNLE9BQU8sR0FBbUIsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQzlELE9BQU8sQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFDcEQsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO2dCQUNwRCxPQUFPLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDbkQsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdkIsQ0FBQztZQU5lLFNBQUksT0FNbkIsQ0FBQTtZQUVELElBQWlCLFNBQVMsQ0F3RHpCO1lBeERELFdBQWlCLFNBQVM7Z0JBQ3ZCLFNBQWdCLFVBQVUsQ0FBMkIsT0FBVTtvQkFDNUQsT0FBTyxDQUFDLFVBQWtCLEVBQUUsRUFBRTt3QkFFM0IsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7d0JBQ3pDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFB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SSxLQUFKLFlBQUksUUFvRXpCO0lBQUQsQ0FBQyxFQXBFYSxPQUFPLEdBQVAsV0FBTyxLQUFQLFdBQU8sUUFvRXBCO0FBQUQsQ0FBQyxFQXBFUyxHQUFHLEtBQUgsR0FBRyxRQW9FWiIsInNvdXJjZXNDb250ZW50IjpbIm5hbWVzcGFjZSBTdmcuRWxlbWVudC5UZXh0IHtcclxuICAgbGV0IHRleHRQYXRoQ291bnQgPSAwO1xyXG4gICBleHBvcnQgdHlwZSB0eXBlID0gUmV0dXJuVHlwZTx0eXBlb2YgbWFrZT47XHJcbiAgIGV4cG9ydCBmdW5jdGlvbiBtYWtlKHRleHQ6IHN0cmluZywgc3RhcnRWZWN0b3I6IFZlY3RvciwgY2xhc3Nlczogc3RyaW5nID0gXCJcIikge1xyXG4gICAgICBjb25zdCBlbGVtZW50OiBTVkdUZXh0RWxlbWVudCA9IEVsZW1lbnQubWFrZShcInRleHRcIiwgY2xhc3Nlcyk7XHJcbiAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCd4Jywgc3RhcnRWZWN0b3IueC50b1N0cmluZygpKTtcclxuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3knLCBzdGFydFZlY3Rvci55LnRvU3RyaW5nKCkpO1xyXG4gICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpKTtcclxuICAgICAgcmV0dXJuIHN2ZyhlbGVtZW50KTtcclxuICAgfVxyXG5cclxuICAgZXhwb3J0IG5hbWVzcGFjZSBGdW5jdGlvbnMge1xyXG4gICAgICBleHBvcnQgZnVuY3Rpb24gZm9sbG93UGF0aDxUIGV4dGVuZHMgU1ZHVGV4dEVsZW1lbnQ+KGVsZW1lbnQ6IFQpIHtcclxuICAgICAgICAgcmV0dXJuIChwYXRoU3RyaW5nOiBzdHJpbmcpID0+IHtcclxuICAgICAgICAgICAgLy8gTWFrZSBhIG5ldyBwYXRoXHJcbiAgICAgICAgICAgIGxldCBwYXRoID0gRWxlbWVudC5QYXRoLm1ha2UocGF0aFN0cmluZyk7XHJcbiAgICAgICAgICAgICQocGF0aC5lbGVtZW50KS5oaWRlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBHaXZlIGl0IGEgZ2VuZXJhdGVkIChob3BlZnVsbHkgdW5pcXVlKSAgSURcclxuICAgICAgICAgICAgbGV0IHBhdGhJRCA9IFwicGF0aEZvclRleHRcIiArIHRleHRQYXRoQ291bnQ7XHJcbiAgICAgICAgICAgIHBhdGguZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBwYXRoSUQpO1xyXG4gICAgICAgICAgICB0ZXh0UGF0aENvdW50ICs9IDE7XHJcblxyXG4gICAgICAgICAgICAvLyBNYWtlIHRoZSB0ZXh0IHBhdGgsIGFuZCBsaW5rIGl0IHRvIHRoZSBwYXRoXHJcbiAgICAgICAgICAgIGxldCB0ZXh0UGF0aEVsID0gRWxlbWVudC5tYWtlKFwidGV4dFBhdGhcIik7XHJcbiAgICAgICAgICAgIHRleHRQYXRoRWwuc2V0QXR0cmlidXRlKFwiaHJlZlwiLCBcIiNcIiArIHBhdGhJRCk7XHJcblxyXG4gICAgICAgICAgICAvLyBHZXQgdGV4dCBjb250ZW50LCByZW1vdmUgZnJvbSB0ZXh0RWwgYW5kIGFkZCB0byB0ZXh0IHBhdGhFbFxyXG4gICAgICAgICAgICBsZXQgdGV4dCA9ICQoZWxlbWVudCkudGV4dCgpO1xyXG4gICAgICAgICAgICAkKGVsZW1lbnQpLnRleHQoXCJcIik7XHJcbiAgICAgICAgICAgIHRleHRQYXRoRWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dCkpO1xyXG5cclxuICAgICAgICAgICAgLy8gQWRkIHRoZSBwYXRoIGFuZCB0ZXh0cGF0aCBhcyBjaGlsZHJlblxyXG4gICAgICAgICAgICBlbGVtZW50LmFwcGVuZENoaWxkKHBhdGguZWxlbWVudCk7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQodGV4dFBhdGhFbCk7XHJcbiAgICAgICAgICAgIHJldHVybiBzdmcoZWxlbWVudCk7XHJcbiAgICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgZXhwb3J0IGZ1bmN0aW9uIHJvdGF0ZVBvc2l0aW9uPFQgZXh0ZW5kcyBTVkdUZXh0RWxlbWVudD4oZWxlbWVudDogVCkge1xyXG4gICAgICAgICByZXR1cm4gKHJvdGF0aW9uOiBudW1iZXIpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcG9zaXRpb24gPSB7XHJcbiAgICAgICAgICAgICAgIHg6IE51bWJlcihlbGVtZW50LmdldEF0dHJpYnV0ZShcInhcIikpLFxyXG4gICAgICAgICAgICAgICB5OiBOdW1iZXIoZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ5XCIpKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHN2ZyhlbGVtZW50KS5yb3RhdGUocm90YXRpb24pLnJvdGF0ZSgtcm90YXRpb24sIHBvc2l0aW9uKTtcclxuXHJcbiAgICAgICAgICAgIGlmICgyNSA8IHJvdGF0aW9uICYmIHJvdGF0aW9uIDwgMTU1KSB7XHJcbiAgICAgICAgICAgICAgICQoZWxlbWVudCkuY3NzKFwidGV4dC1hbmNob3JcIiwgXCJzdGFydFwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICgtMTU1IDwgcm90YXRpb24gJiYgcm90YXRpb24gPCAtMjUpIHtcclxuICAgICAgICAgICAgICAgJChlbGVtZW50KS5jc3MoXCJ0ZXh0LWFuY2hvclwiLCBcImVuZFwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgJChlbGVtZW50KS5jc3MoXCJ0ZXh0LWFuY2hvclwiLCBcIm1pZGRsZVwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKDEzNSA8IHJvdGF0aW9uIHx8IHJvdGF0aW9uIDwgLTEzNSkge1xyXG4gICAgICAgICAgICAgICAkKGVsZW1lbnQpLmNzcyhcImFsaWdubWVudC1iYXNlbGluZVwiLCBcImhhbmdpbmdcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoLTU1IDwgcm90YXRpb24gJiYgcm90YXRpb24gPCA0NSkge1xyXG4gICAgICAgICAgICAgICAkKGVsZW1lbnQpLmNzcyhcImFsaWdubWVudC1iYXNlbGluZVwiLCBcImJhc2VsaW5lXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAkKGVsZW1lbnQpLmNzcyhcImFsaWdubWVudC1iYXNlbGluZVwiLCBcIm1pZGRsZVwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHN2ZyhlbGVtZW50KTtcclxuICAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICB9XHJcbn1cclxuIl19